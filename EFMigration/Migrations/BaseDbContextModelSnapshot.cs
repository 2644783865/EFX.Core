// <auto-generated />
using System;
using EFMigration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFMigration.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    partial class BaseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tibos.Domain.Dict", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("Sort");

                    b.Property<int>("Status");

                    b.Property<string>("Tid");

                    b.HasKey("Id");

                    b.ToTable("Dict");
                });

            modelBuilder.Entity("Tibos.Domain.DictType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Mark");

                    b.Property<string>("Name");

                    b.Property<int?>("Sort");

                    b.HasKey("Id");

                    b.ToTable("DictType");
                });

            modelBuilder.Entity("Tibos.Domain.Manager", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("LoginIp");

                    b.Property<DateTime?>("LoginTime");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password");

                    b.Property<string>("RoleId");

                    b.Property<int?>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("Tibos.Domain.Navigation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Areas");

                    b.Property<string>("ControllerName");

                    b.Property<string>("Icon");

                    b.Property<int?>("IsSys");

                    b.Property<int?>("Level");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<string>("ParentId");

                    b.Property<int?>("Sort");

                    b.HasKey("Id");

                    b.ToTable("Navigation");
                });

            modelBuilder.Entity("Tibos.Domain.NavigationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DId");

                    b.Property<string>("NId");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("NavigationRole");
                });

            modelBuilder.Entity("Tibos.Domain.Organization", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("OrgType");

                    b.Property<string>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Tibos.Domain.Position", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("OrgId");

                    b.Property<string>("RoleIds");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("Tibos.Domain.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Tibos.Domain.RoleNavDict", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DId");

                    b.Property<string>("NId");

                    b.Property<string>("RId");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("RoleNavDict");
                });

            modelBuilder.Entity("Tibos.Domain.Users", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("LoginIp");

                    b.Property<DateTime?>("LoginTime");

                    b.Property<string>("Mobile");

                    b.Property<string>("Password");

                    b.Property<int?>("Sex");

                    b.Property<int?>("Status");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
